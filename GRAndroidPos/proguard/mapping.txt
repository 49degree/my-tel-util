com.guanri.android.dilog.CheckPSWDialog -> com.guanri.android.a.b:
    android.widget.Button mOkBtn -> a
    android.widget.Button mCancelBtn -> b
    android.widget.EditText EdtUserOldPWD -> c
    android.content.Context context -> d
    void displayDlg() -> a
    void onClick(android.view.View) -> onClick
com.guanri.android.dilog.SystemConfigService -> com.guanri.android.a.d:
    android.content.Context context -> a
    boolean serverInfoValuesCheck(java.lang.String,java.lang.String) -> a
com.guanri.android.dilog.SystemSettingDialog -> com.guanri.android.a.a:
    android.widget.Button mOkBtn -> a
    android.widget.Button mCancelBtn -> b
    android.widget.EditText mServerIpEdt1 -> c
    android.widget.EditText mServerIpEdt2 -> d
    android.widget.EditText mServerIpEdt3 -> e
    android.widget.EditText mServerIpEdt4 -> f
    android.widget.EditText mServerPortEdt -> g
    com.guanri.android.dilog.SystemConfigService systemConfig -> h
    android.content.Context context -> i
    java.lang.String serverip -> j
    void displayDlg() -> a
    void onClick(android.view.View) -> onClick
com.guanri.android.dilog.UpdateUserDialog -> com.guanri.android.a.c:
    android.widget.Button mOkBtn -> a
    android.widget.Button mCancelBtn -> b
    android.widget.EditText EdtUserOldPWD -> c
    android.widget.EditText EdtUserNewPWD -> d
    android.widget.EditText EdtUserNewPWD2 -> e
    android.content.Context context -> f
    void displayDlg() -> a
    void onClick(android.view.View) -> onClick
com.guanri.android.exception.CommandParseException -> com.guanri.android.b.d:
com.guanri.android.exception.FieldIsNullException -> com.guanri.android.b.c:
com.guanri.android.exception.FieldTooLongException -> com.guanri.android.b.e:
com.guanri.android.exception.OrderNonPacketException -> com.guanri.android.b.b:
com.guanri.android.exception.PacketException -> com.guanri.android.b.a:
com.guanri.android.jpos.Main -> com.guanri.android.jpos.Main:
    com.guanri.android.lib.log.Logger logger -> a
    com.guanri.android.jpos.pos.PosCommandControlImp posCommandControlImp -> b
    android.widget.EditText info -> f
    android.widget.EditText read_info -> c
    android.widget.Button send -> g
    android.widget.Button open -> d
    android.os.Handler updateUI -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void access$0(com.guanri.android.jpos.Main,java.lang.String) -> a
com.guanri.android.jpos.Main$1 -> com.guanri.android.jpos.h:
    com.guanri.android.jpos.Main this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.guanri.android.jpos.Main$2 -> com.guanri.android.jpos.g:
    com.guanri.android.jpos.Main this$0 -> a
    void onClick(android.view.View) -> onClick
com.guanri.android.jpos.Main$3 -> com.guanri.android.jpos.f:
    com.guanri.android.jpos.Main this$0 -> a
    byte[] val$msg -> b
    void onClick(android.view.View) -> onClick
com.guanri.android.jpos.Main$3$1 -> com.guanri.android.jpos.c:
    com.guanri.android.jpos.Main$3 this$1 -> b
    void onSendDataResult(byte[]) -> a
com.guanri.android.jpos.Main$5 -> com.guanri.android.jpos.e:
    com.guanri.android.jpos.Main this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.guanri.android.jpos.MainActivity -> com.guanri.android.jpos.MainActivity:
    android.widget.EditText comm_state -> d
    android.widget.Button btn_stop -> e
    android.widget.Button btn_modify_server -> f
    android.widget.Button btn_modify_pwd -> g
    com.guanri.android.lib.log.Logger logger -> h
    java.lang.StringBuffer result -> i
    com.guanri.android.jpos.MainActivity$LogTask logTask -> j
    boolean mIsRemoteBound -> k
    com.guanri.android.jpos.services.GrPosService mRemoteService -> l
    android.content.ServiceConnection mRemoteConnection -> m
    boolean stopTask -> n
    boolean stopLog -> a
    boolean hasCommPort -> b
    android.os.Handler updateUI -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void access$0(com.guanri.android.jpos.MainActivity,com.guanri.android.jpos.services.GrPosService) -> a
    android.widget.EditText access$1(com.guanri.android.jpos.MainActivity) -> a
    com.guanri.android.jpos.services.GrPosService access$2(com.guanri.android.jpos.MainActivity) -> b
com.guanri.android.jpos.MainActivity$1 -> com.guanri.android.jpos.b:
    com.guanri.android.jpos.MainActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.guanri.android.jpos.MainActivity$2 -> com.guanri.android.jpos.a:
    com.guanri.android.jpos.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.guanri.android.jpos.MainActivity$LogTask -> com.guanri.android.jpos.d:
    com.guanri.android.jpos.MainActivity this$0 -> a
    void run() -> run
com.guanri.android.jpos.QueryDateActivity -> com.guanri.android.jpos.QueryDateActivity:
    android.widget.EditText edtdb -> a
    com.guanri.android.lib.log.Logger logger -> b
    com.guanri.android.jpos.db.DBOperator dboperator -> c
    java.lang.StringBuffer strbuf -> d
    void onCreate(android.os.Bundle) -> onCreate
com.guanri.android.jpos.bean.SaleDataLogBean -> com.guanri.android.jpos.g.a:
    java.lang.String PosNo -> a
    java.lang.String PosMac -> b
    java.lang.String TransactionType -> c
    java.lang.String MsgTypeCode -> d
    int TransactionState -> e
    long TransactionMoney -> f
    java.lang.String OrderNo -> g
    java.lang.String CardNo -> h
    java.lang.String SearchNo -> i
    java.lang.String AuthorizationNo -> j
    java.lang.String DataStr -> k
    java.lang.String TimeStr -> l
    java.lang.String BatchNo -> m
    java.lang.String ProcessCode -> n
com.guanri.android.jpos.broadcast.BootBroadcastReceiver -> com.guanri.android.jpos.broadcast.BootBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.guanri.android.jpos.broadcast.ShutdownReceiver -> com.guanri.android.jpos.broadcast.ShutdownReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.guanri.android.jpos.common.NetWorkBlthStateHandler -> com.guanri.android.jpos.d.a:
    int NETWORK_NOTIFY_ID -> a
    int connectTimes -> b
    void handleMessage(android.os.Message) -> handleMessage
com.guanri.android.jpos.common.SharedPreferencesUtils -> com.guanri.android.jpos.d.b:
    android.content.Context context -> a
    java.lang.String getConfigString(java.lang.String,java.lang.String) -> a
    void setConfigString(java.lang.String,java.lang.String,java.lang.String) -> a
com.guanri.android.jpos.constant.JposConstant -> com.guanri.android.jpos.e.b:
    java.util.HashMap POS_BILL99_TRANCE_CODE -> c
    java.util.HashMap BILL99_RESULT_TYPE_CODE -> d
    java.lang.String COMFIG_POS_ID -> e
    java.lang.String COMFIG_POS_CONTACT -> f
    java.lang.String SERVER_IP -> a
    int SERVER_PORT -> b
    void initPos() -> a
    void reflesh() -> b
    java.lang.String result(java.lang.String) -> a
com.guanri.android.jpos.constant.JposConstant$DataEncodeType -> com.guanri.android.jpos.e.a:
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType JPOS_BCD -> a
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType JPOS_ASCII -> b
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType[] ENUM$VALUES -> c
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType[] values() -> values
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.db.DBBean -> com.guanri.android.jpos.c.b:
    java.util.Map needInitTables -> a
    java.util.Map primaryKey -> b
com.guanri.android.jpos.db.DBOperator -> com.guanri.android.jpos.c.a:
    com.guanri.android.lib.log.Logger logger -> a
    java.lang.String TAG -> b
    android.database.sqlite.SQLiteDatabase sqlDb -> c
    java.lang.String DB_NAME -> d
    int DB_VERSION -> e
    android.content.Context context -> f
    com.guanri.android.jpos.db.DBOperator instance -> g
    com.guanri.android.jpos.db.DBOperator getInstance() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    android.database.Cursor queryCursor(java.lang.String,java.lang.String[],java.util.Map) -> a
    java.util.List queryBeanList(java.lang.String,java.util.Map) -> a
    long insert(java.lang.String,java.lang.Object) -> a
    long update(java.lang.String,java.util.Map,java.util.Map) -> a
    long update(java.lang.String,android.content.ContentValues,java.util.Map) -> a
    void del$482df45a(java.lang.String) -> a
com.guanri.android.jpos.iso.JposBitMap -> com.guanri.android.jpos.a.d:
    java.util.BitSet bitmapBase -> a
    java.util.BitSet bitmapExtend -> b
    boolean extendFlag -> c
    void setBitmapBase(int) -> a
    boolean getBitmapBaseValue(int) -> b
    void addBitmapExtend() -> a
    boolean getBitmapExtendValue(int) -> c
    void setBitmapExtend(int) -> d
    boolean isExtendFlag() -> b
    byte[] parseBitmapBase() -> c
com.guanri.android.jpos.iso.JposMessageType -> com.guanri.android.jpos.a.e:
    java.lang.String messageType -> a
    java.lang.Short pageLength -> b
    java.lang.String getMessageType() -> b
    void setMessageType(java.lang.String) -> d
    java.lang.Short getPageLength() -> c
    void setPageLength(java.lang.Short) -> a
    byte[] parseValue() -> a
com.guanri.android.jpos.iso.JposPackageFather -> com.guanri.android.jpos.a.c:
    com.guanri.android.lib.log.Logger logger -> b
    java.util.TreeMap mSendMap -> a
    com.guanri.android.jpos.iso.JposBitMap mBitMap -> c
    com.guanri.android.jpos.iso.JposMessageType mMessageType -> d
    byte[] packagMacBlock() -> a
    boolean setMac(byte[]) -> a
    byte[] getMacSource() -> b
    byte[] packaged() -> c
    byte[] parseBitValue(int) -> a
    byte[] parseBitValue(int,java.lang.String) -> a
    byte[] str2ASCII(java.lang.String,int) -> a
    byte[] fixLengthStr2cbcd$52fc006d(java.lang.String,int) -> b
com.guanri.android.jpos.iso.JposSelfFieldLeaf -> com.guanri.android.jpos.a.b:
    java.lang.String tag -> a
    int lengthType -> b
    com.guanri.android.jpos.constant.JposConstant$DataEncodeType encodeType -> c
    int maxLength -> d
    java.lang.String value -> e
    java.lang.String memo -> f
    java.lang.String getTag() -> a
    void setTag(java.lang.String) -> a
    java.lang.String getValue() -> b
    void setValue(java.lang.String) -> b
com.guanri.android.jpos.iso.JposUnPackageFather -> com.guanri.android.jpos.a.a:
    com.guanri.android.lib.log.Logger logger -> d
    byte[] data -> a
    int index -> b
    java.util.TreeMap mReturnMap -> e
    com.guanri.android.jpos.iso.JposBitMap jposBitMap -> f
    com.guanri.android.jpos.iso.JposMessageType mMessageType -> c
    void unPacketed() -> a
    void creatMessageType() -> b
    void parseMessageType() -> c
    java.lang.Object parseBitValue(int) -> a
    java.lang.Object parseBitValue(int,java.lang.String) -> a
    java.util.TreeMap getMReturnMap() -> d
    com.guanri.android.jpos.iso.JposMessageType getMMessageType() -> e
com.guanri.android.jpos.iso.bill99.JposMessageType99Bill -> com.guanri.android.jpos.a.a.b:
    byte id -> a
    java.lang.String ServerAddress -> b
    java.lang.String Address -> c
    java.lang.String pagever -> d
    void setId(byte) -> a
    void setServerAddress(java.lang.String) -> a
    void setAddress(java.lang.String) -> b
    void setPagever(java.lang.String) -> c
    byte[] parseValue() -> a
com.guanri.android.jpos.iso.bill99.JposPackage99Bill -> com.guanri.android.jpos.a.a.c:
    com.guanri.android.lib.log.Logger logger -> b
    byte[] parseBitValue(int) -> a
    byte[] parseFeild3(java.lang.Object) -> a
    byte[] parseFeild4(java.lang.Object) -> b
    byte[] parseFeild11(java.lang.Object) -> c
    byte[] parseFeild12(java.lang.Object) -> d
    byte[] parseFeild13(java.lang.Object) -> e
    byte[] parseFeild49(java.lang.Object) -> f
    byte[] getMacSource() -> b
com.guanri.android.jpos.iso.bill99.JposUnPackage99Bill -> com.guanri.android.jpos.a.a.a:
    com.guanri.android.lib.log.Logger logger -> d
    com.guanri.android.jpos.iso.bill99.JposMessageType99Bill jposMessageType99Bill -> e
    void creatMessageType() -> b
    void parseMessageType() -> c
    java.lang.Object parseBitValue(int) -> a
com.guanri.android.jpos.network.CommandControl -> com.guanri.android.jpos.f.a:
    com.guanri.android.lib.log.Logger logger -> a
    com.guanri.android.jpos.network.CommandControl instance -> b
    java.net.Socket socket -> c
    java.io.InputStream in -> d
    java.io.OutputStream out -> e
    boolean stopReceive -> f
    byte[] recvAllBuffer -> g
    byte[] recvbuf -> h
    int recvAllBufferIndex -> i
    boolean isConnect -> j
    com.guanri.android.jpos.network.CommandControl getInstance() -> a
    com.guanri.android.jpos.pad.ServerDownDataParse sendUpCommand(com.guanri.android.jpos.pad.ServerUpDataParse) -> a
    boolean isConnect() -> b
    boolean connect$255f299() -> c
    void closeConnect() -> d
    byte[] submit(byte[]) -> a
com.guanri.android.jpos.pad.ServerDataHandlerImp -> com.guanri.android.jpos.b.a:
    com.guanri.android.jpos.iso.JposPackageFather receivePosData(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction) -> a
    com.guanri.android.jpos.iso.JposUnPackageFather receiveServerData(byte[]) -> a
    com.guanri.android.jpos.iso.JposPackageFather createJposPackage(java.util.TreeMap,com.guanri.android.jpos.iso.JposMessageType) -> a
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction createBackPosObject$58a8f866(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,java.util.TreeMap) -> a
com.guanri.android.jpos.pad.ServerDownDataParse -> com.guanri.android.jpos.b.b:
    byte[] returnData -> a
    com.guanri.android.jpos.iso.JposUnPackageFather jposUnPackage -> b
    com.guanri.android.jpos.pad.ServerDataHandlerImp serverDataHandler -> c
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction rTransaction -> d
    byte[] getMab() -> a
    byte[] getMac() -> b
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction getTTransaction() -> c
com.guanri.android.jpos.pad.ServerUpDataParse -> com.guanri.android.jpos.b.c:
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction tTransaction -> a
    byte[] mac -> b
    com.guanri.android.jpos.iso.JposPackageFather jposPackage -> c
    com.guanri.android.jpos.pad.ServerDataHandlerImp serverDataHandler -> d
    byte[] getMab() -> a
    byte[] getBeSendData() -> b
    com.guanri.android.jpos.iso.JposPackageFather getJposPackage() -> c
com.guanri.android.jpos.pad.bill99.ServerDataHandler99Bill -> com.guanri.android.jpos.b.a.a:
    com.guanri.android.lib.log.Logger logger -> a
    com.guanri.android.jpos.db.DBOperator dbOperator -> b
    com.guanri.android.jpos.pad.bill99.ServerDataHandler99Bill instance -> c
    com.guanri.android.jpos.pad.bill99.ServerDataHandler99Bill getInstance() -> a
    com.guanri.android.jpos.iso.JposPackageFather createJposPackage(java.util.TreeMap,com.guanri.android.jpos.iso.JposMessageType) -> a
    com.guanri.android.jpos.iso.JposUnPackageFather receiveServerData(byte[]) -> a
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction createBackPosObject$58a8f866(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,java.util.TreeMap) -> a
    com.guanri.android.jpos.iso.JposPackageFather receivePosData(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction) -> a
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction getReversalData(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction) -> b
    java.util.TreeMap getCheckOutData(java.lang.String) -> a
com.guanri.android.jpos.pad.bill99.ServerDataUnPackage99Bill -> com.guanri.android.jpos.b.a.b:
    com.guanri.android.lib.log.Logger logger -> a
    com.guanri.android.jpos.db.DBOperator bdOperator -> b
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPackageLogin$58a8f866(java.util.TreeMap) -> a
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPackageSale$58a8f866(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,java.util.TreeMap) -> a
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPagckageQueryOQS$58a8f866(java.util.TreeMap) -> b
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPackageSaleReceipt$58a8f866(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,java.util.TreeMap) -> b
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPackageReversal$58a8f866(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,java.util.TreeMap) -> c
    com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction UnPackageCheck$58a8f866(java.util.TreeMap) -> c
    void upDataState(java.lang.String,java.lang.String,java.util.Map) -> a
com.guanri.android.jpos.pos.PosCommandControlImp -> com.guanri.android.jpos.pos.g:
    com.guanri.android.lib.log.Logger logger -> a
    void sendData$4b4ebc31(byte[],com.guanri.android.jpos.pos.PosCommandControlImp$SendDataResultListener) -> a
    void portClose() -> b
com.guanri.android.jpos.pos.PosCommandControlImp$SendDataResultListener -> com.guanri.android.jpos.pos.c:
    boolean isDone -> a
    void onSendDataResult(byte[]) -> a
com.guanri.android.jpos.pos.PosCommandControlSerialPort -> com.guanri.android.jpos.pos.f:
    com.guanri.android.lib.log.Logger logger -> a
    com.guanri.android.jpos.pos.PosCommandControlImp instance -> c
    com.guanri.android.jpos.pos.SerialPortImp serialPortImp -> d
    com.guanri.android.jpos.pos.PosCommandControlSerialPort$SerialPortThread readTask -> e
    java.util.Timer timeOutTimer -> f
    com.guanri.android.jpos.pos.PosCommandControlSerialPort$ReadTimerOut readTimerOut -> g
    byte[] HEADER_PACKET -> h
    byte[] returnData -> i
    int index -> j
    boolean hasPacketHeader -> b
    com.guanri.android.jpos.pos.PosCommandControlImp getInstance() -> a
    void clearTimeOutTimer() -> c
    void sendData$4b4ebc31(byte[],com.guanri.android.jpos.pos.PosCommandControlImp$SendDataResultListener) -> a
    void portClose() -> b
    com.guanri.android.jpos.pos.SerialPortImp access$0(com.guanri.android.jpos.pos.PosCommandControlSerialPort) -> a
    byte[] access$1(com.guanri.android.jpos.pos.PosCommandControlSerialPort) -> b
    int access$2(com.guanri.android.jpos.pos.PosCommandControlSerialPort) -> c
    void access$3(com.guanri.android.jpos.pos.PosCommandControlSerialPort,byte[]) -> a
    void access$4(com.guanri.android.jpos.pos.PosCommandControlSerialPort,int) -> a
    com.guanri.android.jpos.pos.PosCommandControlSerialPort$ReadTimerOut access$5(com.guanri.android.jpos.pos.PosCommandControlSerialPort) -> d
    void access$6(com.guanri.android.jpos.pos.PosCommandControlSerialPort) -> e
com.guanri.android.jpos.pos.PosCommandControlSerialPort$ReadTimerOut -> com.guanri.android.jpos.pos.d:
    com.guanri.android.jpos.pos.PosCommandControlImp$SendDataResultListener mSendDataResultListener -> a
    com.guanri.android.jpos.pos.PosCommandControlSerialPort this$0 -> b
    void run() -> run
com.guanri.android.jpos.pos.PosCommandControlSerialPort$SerialPortThread -> com.guanri.android.jpos.pos.h:
    boolean stopFlag -> d
    int size -> a
    byte[] buffer -> b
    com.guanri.android.jpos.pos.PosCommandControlSerialPort this$0 -> c
    void stopTask() -> a
    void run() -> run
    void access$1(com.guanri.android.jpos.pos.PosCommandControlSerialPort$SerialPortThread) -> a
com.guanri.android.jpos.pos.PosCommandControlSerialPort$SerialPortThread$1 -> com.guanri.android.jpos.pos.e:
    com.guanri.android.jpos.pos.PosCommandControlSerialPort$SerialPortThread this$1 -> a
    byte[] call() -> a
    java.lang.Object call() -> call
com.guanri.android.jpos.pos.SerialPortAndroid -> com.guanri.android.jpos.pos.SerialPortAndroid:
    com.guanri.android.lib.log.Logger logger -> e
    java.io.FileDescriptor mFd -> f
    void portClose() -> c
    java.io.FileDescriptor open(java.lang.String,int) -> open
    void close() -> close
    boolean findAndroidDevice(java.lang.String) -> a
com.guanri.android.jpos.pos.SerialPortFactory -> com.guanri.android.jpos.pos.b:
    com.guanri.android.jpos.pos.SerialPortImp getSerialPort() -> a
com.guanri.android.jpos.pos.SerialPortImp -> com.guanri.android.jpos.pos.a:
    java.lang.String device -> a
    int bountRate -> b
    java.io.InputStream mInputStream -> c
    java.io.OutputStream mOutputStream -> d
    java.io.InputStream getInputStream() -> a
    java.io.OutputStream getOutputStream() -> b
    void portClose() -> c
com.guanri.android.jpos.pos.data.Common -> com.guanri.android.jpos.pos.a.a:
    java.lang.String ToHex(byte[]) -> a
    boolean IsSameBytes(byte[],byte[]) -> a
    byte[] SetLength(byte[],int) -> a
    com.guanri.android.jpos.pos.data.Fields.TField[] SetLength(com.guanri.android.jpos.pos.data.Fields.TField[],int) -> a
    int Length(byte[]) -> b
    int Length(com.guanri.android.jpos.pos.data.Fields.TField[]) -> a
    byte[] StringToBytes(java.lang.String) -> a
    java.lang.String BytesToString(byte[]) -> c
    byte[] DES_Encrypt(byte[],byte[]) -> b
com.guanri.android.jpos.pos.data.Fields.TASCField -> com.guanri.android.jpos.pos.a.a.h:
    int GetInteger$255f288() -> a
    long GetInt64$255f289() -> b
    java.lang.String GetString$13d12155() -> c
    void SetInteger$4868d30e(int) -> a
    void SetInt64$4868d6cf(long) -> a
    void SetString$3e6d811f(java.lang.String) -> a
com.guanri.android.jpos.pos.data.Fields.TBCDField -> com.guanri.android.jpos.pos.a.a.a:
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment FAlignment -> h
    int GetInteger$255f288() -> a
    long GetInt64$255f289() -> b
    java.lang.String GetString$13d12155() -> c
    void SetInteger$4868d30e(int) -> a
    void SetInt64$4868d6cf(long) -> a
    void SetString$3e6d811f(java.lang.String) -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes LoadFromBytes_Data(com.guanri.android.jpos.pos.data.TStream) -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes SaveToBytes_Data(com.guanri.android.jpos.pos.data.TStream) -> b
com.guanri.android.jpos.pos.data.Fields.TBINField -> com.guanri.android.jpos.pos.a.a.j:
    int GetInteger$255f288() -> a
    long GetInt64$255f289() -> b
    java.lang.String GetString$13d12155() -> c
    void SetInteger$4868d30e(int) -> a
    void SetInt64$4868d6cf(long) -> a
    void SetString$3e6d811f(java.lang.String) -> a
com.guanri.android.jpos.pos.data.Fields.TField -> com.guanri.android.jpos.pos.a.a.b:
    byte[] FData -> a
    int FIndex -> b
    java.lang.String FName -> c
    int FMaxLength -> d
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType FDataType -> e
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType FLengthType -> f
    int FData_Len -> g
    int[] $SWITCH_TABLE$com$guanri$android$jpos$pos$data$Fields$TField$TLengthType -> h
    int GetInteger$255f288() -> a
    long GetInt64$255f289() -> b
    java.lang.String GetString$13d12155() -> c
    void SetInteger$4868d30e(int) -> a
    void SetInt64$4868d6cf(long) -> a
    void SetString$3e6d811f(java.lang.String) -> a
    void SetAsInteger(int) -> b
    void SetAsInt64(long) -> b
    void SetAsString(java.lang.String) -> b
    int GetIndex() -> d
    void Clear() -> e
    boolean GetIsEmpty() -> f
    byte[] GetData() -> g
    void SetData(byte[]) -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes LoadFromBytes(com.guanri.android.jpos.pos.data.TStream) -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes LoadFromBytes_Data(com.guanri.android.jpos.pos.data.TStream) -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes SaveToBytes(com.guanri.android.jpos.pos.data.TStream) -> d
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes SaveToBytes_Data(com.guanri.android.jpos.pos.data.TStream) -> b
    int[] $SWITCH_TABLE$com$guanri$android$jpos$pos$data$Fields$TField$TLengthType() -> h
com.guanri.android.jpos.pos.data.Fields.TField$TAlignment -> com.guanri.android.jpos.pos.a.a.d:
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment a_Left -> b
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment a_Right -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment[] ENUM$VALUES -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TField$TAlignment valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TField$TDataType -> com.guanri.android.jpos.pos.a.a.g:
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType dt_BIN -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType dt_ASC -> b
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType dt_BCD -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType[] ENUM$VALUES -> d
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TField$TDataType valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TField$TLengthType -> com.guanri.android.jpos.pos.a.a.i:
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType lt_Fixed -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType lt_VarBCD2 -> b
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType lt_VarBCD3 -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType lt_VarBIN1 -> d
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType lt_VarBIN2 -> e
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType[] ENUM$VALUES -> f
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TField$TLengthType valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes -> com.guanri.android.jpos.pos.a.a.c:
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes lfr_NoError -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes lfr_LessBytes -> b
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes lfr_InvalidLength -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes[] ENUM$VALUES -> d
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_LoadFromBytes valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes -> com.guanri.android.jpos.pos.a.a.e:
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes sfr_NoError -> a
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes sfr_EmptyField -> b
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes[] ENUM$VALUES -> c
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TField$TResult_SaveToBytes valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TFieldList -> com.guanri.android.jpos.pos.a.a.f:
    int FFristFieldIndex -> a
    com.guanri.android.jpos.pos.data.Fields.TField[] FFields -> b
    int[] $SWITCH_TABLE$com$guanri$android$jpos$pos$data$Fields$TField$TDataType -> c
    com.guanri.android.jpos.pos.data.Fields.TField GetField(int) -> a
    com.guanri.android.jpos.pos.data.Fields.TField CreateField(int,com.guanri.android.jpos.pos.data.Fields.TField$TDataType,com.guanri.android.jpos.pos.data.Fields.TField$TLengthType,int,java.lang.String) -> a
    void AddField(int,com.guanri.android.jpos.pos.data.Fields.TField$TDataType,com.guanri.android.jpos.pos.data.Fields.TField$TLengthType,int,java.lang.String) -> b
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes LoadFormBytes(com.guanri.android.jpos.pos.data.TStream) -> b
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes SaveToBytes(com.guanri.android.jpos.pos.data.TStream) -> a
    int[] $SWITCH_TABLE$com$guanri$android$jpos$pos$data$Fields$TField$TDataType() -> a
com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes -> com.guanri.android.jpos.pos.a.a.l:
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes rfll_NoError -> a
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes rfll_LessBytes -> b
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes rfll_InvalidField -> c
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes rfll_InsufficientField -> d
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes rfll_RedundantField -> e
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes[] ENUM$VALUES -> f
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_LoadFromBytes valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes -> com.guanri.android.jpos.pos.a.a.k:
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes rfls_NoError -> a
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes rfls_EmptyField -> b
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes rfls_InvalidField -> c
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes[] ENUM$VALUES -> d
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes[] values() -> values
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.pos.data.TStream -> com.guanri.android.jpos.pos.a.b:
    byte[] Bytes -> a
    int Index -> b
    boolean Compress -> c
com.guanri.android.jpos.pos.data.TerminalLinks.DataLink -> com.guanri.android.jpos.pos.a.b.b:
    int ReadTimeout -> a
    boolean WriteBytes(byte[]) -> b
    byte[] ReadBytes(int) -> a
com.guanri.android.jpos.pos.data.TerminalLinks.TAndroidCommTerminalLink -> com.guanri.android.jpos.pos.a.b.c:
    com.guanri.android.lib.log.Logger logger -> c
    java.lang.String CommName -> b
    int BandRate -> d
    boolean FConnected -> e
    java.io.OutputStream outputStream -> f
    java.io.InputStream inputStream -> g
    com.guanri.android.jpos.pos.SerialPortAndroid serialPort -> h
    void Connect() -> b
    void Disconnect() -> c
    boolean GetConnected() -> d
    boolean WriteBytes(byte[]) -> b
    byte[] ReadBytes(int) -> a
com.guanri.android.jpos.pos.data.TerminalLinks.TTerminalLink -> com.guanri.android.jpos.pos.a.b.a:
    boolean SendPackage(byte[]) -> a
    byte[] RecvPackage() -> a
com.guanri.android.jpos.pos.data.TerminalMessages.TBufferList -> com.guanri.android.jpos.pos.a.c.i:
com.guanri.android.jpos.pos.data.TerminalMessages.TData -> com.guanri.android.jpos.pos.a.c.e:
com.guanri.android.jpos.pos.data.TerminalMessages.TEncryptMAC -> com.guanri.android.jpos.pos.a.c.g:
    void Build_DefaultData() -> a
com.guanri.android.jpos.pos.data.TerminalMessages.TEncryptMAC_Recv -> com.guanri.android.jpos.pos.a.c.j:
com.guanri.android.jpos.pos.data.TerminalMessages.TEncryptMAC_Send -> com.guanri.android.jpos.pos.a.c.a:
com.guanri.android.jpos.pos.data.TerminalMessages.THandshake -> com.guanri.android.jpos.pos.a.c.c:
    void Build_DefaultData() -> a
com.guanri.android.jpos.pos.data.TerminalMessages.THandshake_Response -> com.guanri.android.jpos.pos.a.c.b:
com.guanri.android.jpos.pos.data.TerminalMessages.TProcessList -> com.guanri.android.jpos.pos.a.c.h:
    com.guanri.android.jpos.pos.data.Fields.TField FOriginalSerialNumber -> c
    com.guanri.android.jpos.pos.data.Fields.TField FOriginalMAC -> d
    com.guanri.android.jpos.pos.data.Fields.TField OriginalMAC() -> a
    com.guanri.android.jpos.pos.data.Fields.TField OriginalSerialNumber() -> b
    void Resolve() -> c
    boolean GetIsExistPINData() -> d
    java.lang.String GetTrack2Data() -> e
    java.lang.String GetTrack3Data() -> f
    java.lang.String GetPAN() -> g
com.guanri.android.jpos.pos.data.TerminalMessages.TTerminalMessage -> com.guanri.android.jpos.pos.a.c.f:
    void Build_DefaultData() -> a
    com.guanri.android.jpos.pos.data.Fields.TFieldList$TResult_SaveToBytes SaveToBytes(com.guanri.android.jpos.pos.data.TStream) -> a
com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction -> com.guanri.android.jpos.pos.a.c.k:
    com.guanri.android.jpos.pos.data.TerminalMessages.TProcessList ProcessList -> c
    com.guanri.android.jpos.pos.data.TerminalMessages.TBufferList BufferList -> d
    void Build_DefaultData() -> a
    byte[] EncryptMAC() -> g
    boolean CheckMAC() -> b
    boolean LoadProcess() -> c
    void SaveMAC() -> d
    void SaveProcess() -> e
    void ClearProcess() -> f
com.guanri.android.jpos.pos.data.TerminalMessages.TWorkingStatus -> com.guanri.android.jpos.pos.a.c.d:
    void Build_DefaultData() -> a
com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser -> com.guanri.android.jpos.pos.a.d.b:
    java.lang.String LOG_INFO -> a
    com.guanri.android.jpos.pos.data.TerminalLinks.TTerminalLink FTerminalLink -> b
    int FIdent -> c
    int FLastSerialNumber -> d
    java.lang.String FLastMerchantID -> e
    java.lang.String FLastTerminalID -> f
    java.lang.String FLastUserID -> g
    java.lang.String FLastReferenceNumber -> h
    com.guanri.android.lib.log.Logger logger -> i
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState TermState -> j
    void SetTerminalLink(com.guanri.android.jpos.pos.data.TerminalLinks.TTerminalLink) -> a
    void UpdateWorkingStatus(byte) -> a
    boolean CheckWorkingStatus$132beb() -> b
    boolean IsEncryptMACTrans(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction) -> a
    byte[] EncryptMAC(com.guanri.android.jpos.pos.data.TerminalMessages.TTransaction,byte[],boolean) -> a
    void ParseRequest() -> a
    void PutLog(java.lang.String) -> a
com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState -> com.guanri.android.jpos.pos.a.d.a:
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState Offline -> a
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState Online -> b
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState[] ENUM$VALUES -> c
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState[] values() -> values
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser$TTermState valueOf(java.lang.String) -> valueOf
com.guanri.android.jpos.services.AidlRunService -> com.guanri.android.jpos.services.AidlRunService:
    com.guanri.android.lib.log.Logger logger -> a
    boolean isAutoRun -> e
    com.guanri.android.jpos.services.AidlRunService$PosCenterThread posCenterTask -> f
    com.guanri.android.jpos.services.AidlRunService$FindCommTask findCommTask -> g
    java.lang.String LOG_INFO -> b
    com.guanri.android.jpos.services.GrPosService$Stub mBinder -> h
    android.os.PowerManager$WakeLock wakeLock -> i
    boolean IS_SERVER_STOP -> c
    boolean HAS_COMM_PORT -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void notify$6ef37c42(java.lang.String,java.lang.String) -> a
    void clearNotify$13462e() -> a
    void access$0(com.guanri.android.jpos.services.AidlRunService,com.guanri.android.jpos.services.AidlRunService$PosCenterThread) -> a
    com.guanri.android.jpos.services.AidlRunService$PosCenterThread access$1(com.guanri.android.jpos.services.AidlRunService) -> a
    boolean access$2(com.guanri.android.jpos.services.AidlRunService) -> b
    com.guanri.android.jpos.services.GrPosService$Stub access$3(com.guanri.android.jpos.services.AidlRunService) -> c
com.guanri.android.jpos.services.AidlRunService$1 -> com.guanri.android.jpos.services.b:
    com.guanri.android.jpos.services.AidlRunService this$0 -> a
    boolean startPos() -> a
    boolean stopPos() -> b
    boolean hasCommPort() -> c
    java.lang.String operate(java.lang.String) -> a
com.guanri.android.jpos.services.AidlRunService$FindCommTask -> com.guanri.android.jpos.services.a:
    com.guanri.android.jpos.services.AidlRunService this$0 -> a
    void run() -> run
com.guanri.android.jpos.services.AidlRunService$PosCenterThread -> com.guanri.android.jpos.services.c:
    com.guanri.android.jpos.pos.data.TerminalLinks.TAndroidCommTerminalLink TerminalLink -> a
    com.guanri.android.jpos.pos.data.TerminalParsers.TTerminalParser TerminalParser -> b
    boolean IS_TASK_STOP -> c
    com.guanri.android.jpos.services.AidlRunService$PosCenterThread instance -> d
    int index -> e
    java.lang.StringBuffer LOG_INFO -> f
    com.guanri.android.jpos.services.AidlRunService$PosCenterThread getInstance() -> a
    boolean getTaskStop() -> b
    void setTaskStop$1385ff() -> c
    void run() -> run
com.guanri.android.jpos.services.GrPosService -> com.guanri.android.jpos.services.f:
    boolean startPos() -> a
    boolean stopPos() -> b
    boolean hasCommPort() -> c
    java.lang.String operate(java.lang.String) -> a
com.guanri.android.jpos.services.GrPosService$Stub -> com.guanri.android.jpos.services.d:
    com.guanri.android.jpos.services.GrPosService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.guanri.android.jpos.services.GrPosService$Stub$Proxy -> com.guanri.android.jpos.services.e:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    boolean startPos() -> a
    boolean stopPos() -> b
    boolean hasCommPort() -> c
    java.lang.String operate(java.lang.String) -> a
com.guanri.android.lib.context.MainApplication -> com.guanri.android.lib.context.MainApplication:
    com.guanri.android.lib.context.MainApplication instance -> a
    int screenHeight -> b
    int screenWidth -> c
    boolean isLogin -> d
    java.lang.Object userInfo -> e
    com.guanri.android.lib.network.NetWorkTools netWorkTools -> f
    com.guanri.android.lib.context.MainApplication getInstance() -> a
    void onCreate() -> onCreate
    boolean startNetWorkListen(android.os.Handler) -> a
    boolean stopNetWorkListen() -> b
    boolean createConnection() -> c
com.guanri.android.lib.log.LogInfo -> com.guanri.android.lib.c.b:
    com.guanri.android.lib.log.LogInfo instance -> a
    java.lang.StringBuffer pad_to_server -> b
    java.lang.StringBuffer pad_to_pos -> d
    java.lang.StringBuffer pos_to_pad -> c
    java.lang.StringBuffer server_to_pad -> e
    java.lang.String operate(java.lang.String) -> a
com.guanri.android.lib.log.Logger -> com.guanri.android.lib.c.a:
    java.lang.Class operateClass -> a
    java.lang.String logPath -> b
    java.lang.String logFile -> c
    java.text.SimpleDateFormat fileTimeFormat -> d
    java.text.SimpleDateFormat dataTimeFormat -> e
    int overallLevel -> f
    int localLevel -> g
    com.guanri.android.lib.log.Logger getLogger(java.lang.Class) -> a
    void debug(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String) -> c
    void logInfo(java.lang.String,java.lang.StringBuffer) -> a
    java.lang.String createDir(java.lang.String) -> d
    void deleteFile$505cff1c(java.lang.String) -> e
    long getDataTime(java.text.SimpleDateFormat,java.lang.String) -> a
    java.lang.String getDataTime(java.text.SimpleDateFormat) -> a
com.guanri.android.lib.network.NetWorkTools -> com.guanri.android.lib.b.c:
    java.lang.String NUMERIC_TYPE_MOBILE_TD -> a
    java.lang.String NUMERIC_TYPE_UNICOM -> b
    java.lang.String NUMERIC_TYPE_MOBILE_GSM -> c
    java.lang.String NUMERIC_TYPE_TELECOM -> d
    android.net.Uri URL_APN_LIST -> e
    android.net.Uri URL_APN_CURRENT -> f
    android.content.Context mContext -> g
    android.os.Handler mHandler -> h
    int mGprsType -> i
    boolean mIsAuto -> j
    boolean mIsConnected -> k
    boolean stopConnect -> l
    com.guanri.android.lib.network.NetWorkTools$ConnectionChangeReciver mReceiver -> m
    java.util.Timer mTimer -> n
    void autoConnect() -> a
    void cancelMmonitor() -> b
    boolean createGprsConnection$138603() -> c
    android.content.Context access$0(com.guanri.android.lib.network.NetWorkTools) -> a
    void access$1(com.guanri.android.lib.network.NetWorkTools,boolean) -> a
    java.util.Timer access$2(com.guanri.android.lib.network.NetWorkTools) -> b
    boolean access$3(com.guanri.android.lib.network.NetWorkTools) -> c
    android.os.Handler access$4(com.guanri.android.lib.network.NetWorkTools) -> d
    boolean access$5(com.guanri.android.lib.network.NetWorkTools) -> e
    boolean access$6(com.guanri.android.lib.network.NetWorkTools) -> f
    void access$7$4e2f39d1(com.guanri.android.lib.network.NetWorkTools) -> g
com.guanri.android.lib.network.NetWorkTools$ApnNode -> com.guanri.android.lib.b.a:
    int id -> a
    java.lang.String apn -> b
    java.lang.String name -> c
    java.lang.String numeric -> d
    java.lang.String mcc -> e
    java.lang.String mnc -> f
    java.lang.String proxy -> g
    java.lang.String port -> h
    com.guanri.android.lib.network.NetWorkTools this$0 -> i
    void setProxy(java.lang.String,java.lang.String) -> a
    int access$0(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> a
    java.lang.String access$1(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> b
    java.lang.String access$2(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> c
    java.lang.String access$3(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> d
    java.lang.String access$4(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> e
    java.lang.String access$5(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> f
    java.lang.String access$6(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> g
    java.lang.String access$7(com.guanri.android.lib.network.NetWorkTools$ApnNode) -> h
com.guanri.android.lib.network.NetWorkTools$ConnectionChangeReciver -> com.guanri.android.lib.b.b:
    boolean mCheckFirst -> a
    com.guanri.android.lib.network.NetWorkTools this$0 -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.guanri.android.lib.network.NetWorkTools$TimeOutCheckTimer -> com.guanri.android.lib.b.d:
    com.guanri.android.lib.network.NetWorkTools this$0 -> a
    void run() -> run
com.guanri.android.lib.utils.DialogUtils -> com.guanri.android.lib.a.b:
    void showMessageAlertDlg$383db2dd(android.content.Context,java.lang.String,java.lang.String) -> a
com.guanri.android.lib.utils.DialogUtils$1 -> com.guanri.android.lib.a.e:
    com.guanri.android.lib.utils.DialogUtils$OnAlertDlgSureBtn val$dlgSureBtn -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.guanri.android.lib.utils.DialogUtils$OnAlertDlgSureBtn -> com.guanri.android.lib.a.d:
com.guanri.android.lib.utils.TypeConversion -> com.guanri.android.lib.a.c:
    short bytesToShortEx$49634b84(byte[]) -> a
    java.lang.String byte2hex$55a39fc4(byte[],int) -> a
    java.lang.String byte2hex(byte[]) -> b
    java.lang.String byteTo0XString$55a39fc4(byte[],int) -> b
    byte[] str2bcd(java.lang.String) -> a
    java.lang.String bcd2string$55a39fc4(byte[],int) -> c
com.guanri.android.lib.utils.Utils -> com.guanri.android.lib.a.a:
    byte[] insertEnoughLengthBuffer(byte[],int,byte[],int,int,int) -> a
com.guanri.android.update.Update -> com.guanri.android.update.Update:
    android.app.ProgressDialog pBar -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void install(java.lang.String) -> a
    void showSureDialog$3b99f9eb(java.lang.String,java.lang.String) -> a
    android.os.Handler access$0(com.guanri.android.update.Update) -> a
com.guanri.android.update.Update$1 -> com.guanri.android.update.e:
    com.guanri.android.update.Update this$0 -> a
    java.lang.String val$filePath -> b
    java.lang.String val$fileName -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.guanri.android.update.Update$2 -> com.guanri.android.update.d:
    com.guanri.android.update.Update this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.guanri.android.update.Update$3 -> com.guanri.android.update.c:
    com.guanri.android.update.Update this$0 -> a
    java.lang.String val$urlString -> b
    java.lang.String val$fileName -> c
    void run() -> run
com.guanri.android.update.Update$3$1 -> com.guanri.android.update.f:
    com.guanri.android.update.Update$3 this$1 -> a
    void run() -> run
com.guanri.android.update.Update$4 -> com.guanri.android.update.a:
    com.guanri.android.update.Update this$0 -> a
    java.lang.String val$fileName -> b
    void run() -> run
com.guanri.android.update.Update$5 -> com.guanri.android.update.b:
    com.guanri.android.update.Update this$0 -> a
    boolean val$exit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
